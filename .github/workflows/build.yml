name: CMake

on:
  push:
    tags:
    - 'v*'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      run: export CC=/usr/bin/clang && export CXX=/usr/bin/clang++ && cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
    - name: Prepare Artefact
      working-directory: ${{github.workspace}}/build
      run: ls&&mkdir ../publish&&cp sharkFsStats ../publish/sharkFsStats.elf&&cp ../LICENSE ../publish/LICENSE
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        path: ${{github.workspace}}/build/firstuniversalWINuLINUXcpp
    - name: Build Zip File
      working-directory: ${{github.workspace}}
      run: |
          zip -r linux_build publish
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./linux_build.zip
        asset_name: linux_build.zip
        asset_content_type: application/zip
